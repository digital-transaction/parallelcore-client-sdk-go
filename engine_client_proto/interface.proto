//
// Copyright 2018 Digital Transaction Limited. All Rights Reserved.
//
// Authors: Yang SONG, Eric Ma
//

syntax = "proto3";

package engine_client_proto;

service RequestHandler {
  rpc Invoke(Request) returns (Response) {}
  rpc IdentifiedInvoke(Request) returns (IdentifiedResponse) {}
  rpc UserMan(Request) returns (Response) {}
  rpc SysMan(Request) returns (Response) {}
  rpc Renew(Request) returns (Response) {}
  rpc Auth(AuthRequest) returns (Response) {}
  rpc Ping(Request) returns (Response) {}
  rpc RegisterEventListener(stream Request) returns (stream Response) {}
  rpc ManageApiAccess(Request) returns (Response) {}
  rpc CheckApiAccess(Request) returns (Response) {}
  
  rpc RegisterSmartContract(Request) returns (Response) {}
  rpc ListSmartContract(Request) returns (Response) {}
  rpc ListSmartContracts(Request) returns (Response) {}
  rpc GrantAccess(Request) returns (Response) {}
  rpc RevokeAccess(Request) returns (Response) {}

  rpc CreateDomain(Request) returns (Response) {}
  rpc ListDomain(Request) returns (Response) {}
  rpc ListManagedDomains(Request) returns (Response) {}
  rpc GrantDomainAdmin(Request) returns (Response) {}
  rpc RevokeDomainAdmin(Request) returns (Response) {}

  rpc CreateClient(Request) returns (Response) {}
  rpc UpdateClient(Request) returns (Response) {}
  rpc ListClient(Request) returns (Response) {}
  rpc ListClients(Request) returns (Response) {}
  rpc RemoveClient(Request) returns (Response) {}  
}

message AuthRequest {
  bytes clientId = 1;
  bytes credential = 2;
}

message Request {
  bytes payload = 1;
}

message Response {
  bytes payload = 1;
  bytes error = 2;
}

message IdentifiedResponse {
  bytes payload = 1;
  bytes committedId = 2;
  bytes error = 3;
}
